const log = require('SyntheticsLogger');
const synthetics = require('Synthetics');

exports.handler = async () => {
    const stepConfig = {
        logRequest: true,
        logRequestBody: true,
        logRequestHeaders: true,
        logResponse: true,
        logResponseBody: true,
        logResponseHeaders: true,
        includeRequestHeaders: true,
        includeRequestBody: true,
        includeResponseHeaders: true,
        includeResponseBody: true,
        restrictedHeaders: ['X-Amz-Security-Token', 'Authorization'],
    };

    log.info("API Gateway url: ", process.env.API_URL);
    const url = new URL(process.env.API_URL);
    const requestOptions = {
        hostname: url.host,
        method: 'GET',
        path: '/prod/hello',
        port: 443,
        protocol: 'https:',
        headers: {
            'User-Agent': synthetics.getCanaryUserAgentString(),
        }
    };

    const validate = async (res) => {
        return new Promise((resolve, reject) => {
            if (res.statusCode !== 200) {
                reject(`Invalid status code: ${res.statusCode} ${res.statusMessage}`);
            }

            let responseBody = '';
            res.on('data', (d) => {
                responseBody += d;
            });

            res.on('end', () => {
                if (responseBody !== 'Hello, World!') {
                    reject(`Invalid response body: ${responseBody}`);
                }
                resolve();
            });
        });
    };

    await synthetics.executeHttpStep('Verify GET /hello', requestOptions, validate, stepConfig);

    return "Successfully completed basicCanary checks.";
};